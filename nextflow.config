docker {
  enabled = true
  runOptions = '-u $(id -u):$(id -g)'
}

params.max_cpus = 8
params.help = false


// specify docker containers and versions

process {
    withName: BWA_INDEX { container = 'staphb/bwa:0.7.18'}
    withName: BWA_MEM { container = 'staphb/bwa:0.7.18' }
    withName: SAMTOOLS_SORT { container = 'staphb/samtools:1.21'}
    withName: SAMTOOLS_INDEX { container = 'staphb/samtools:1.21' }
    withName: SAMTOOLS_FAIDX { container = 'staphb/samtools:1.21' }
    withName: SAMTOOLS_FLAGSTAT { container = 'staphb/samtools:1.21' }
    withName: SAMTOOLS_IDXSTATS { container = 'staphb/samtools:1.21'}
    withName: SAMTOOLS_DEPTH { container = 'staphb/samtools:1.21'}
    withName: BCFTOOLS_MPILEUP { container = 'staphb/bcftools:1.21' }
    withName: BCFTOOLS_VIEW { container = 'staphb/bcftools:1.21' } 
}


// run profiles

profiles {
    gcb {
        process.executor = 'google-batch'
        google.project = 'bact-outbreak-analysis-1'
        workDir = 'gs://bact-outbreak-1-nysdohwc/WH/downloads_2024/TEMP2/workdir/'		
        params.outdir = 'gs://bact-outbreak-1-nysdohwc/WH/downloads_2024/TEMP2/'
        params.genome = 'gs://bact-outbreak-1-nysdohwc/WH/downloads_2024/TEMP2/IDR2400067430-01-00_S46/IDR2400067430-01-00_S46.fa'
        params.input_csv = "$launchDir/sample_sheet_test_gbs.csv"
        google.location = 'us-east4'
        google.region  = 'us-east4'
        google.batch.spot = true
        google.batch.maxSpotAttempts = 5
        google.batch.bootDiskSize = 50.GB
        google.batch.usePrivateAddress = true    // prevent external IPs
        google.batch.network = 'https://www.googleapis.com/compute/v1/projects/doh-wadsworth-shared-net/global/networks/doh-wadsworth-shared-net-vpc-001'
        google.batch.subnetwork = 'https://www.googleapis.com/compute/v1/projects/doh-wadsworth-shared-net/regions/us-east4/subnetworks/doh-wadsworth-shared-net-subnet-001'
        google.batch.serviceAccountEmail = 'bact-outbreak-nf-serv-acct@bact-outbreak-analysis-1.iam.gserviceaccount.com'
        process.errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
        process.maxRetries = 5
	}

    local { 
        params.outdir = "$launchDir/reads"
        params.input_csv = "$launchDir/sample_sheet.csv"
	}

 }


// Execution reports
//def timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

//params.timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

//report {
//    enabled = true
//    file    = "${params.outdir}/pipeline_info/execution_report_${timestamp}.html"
//}

